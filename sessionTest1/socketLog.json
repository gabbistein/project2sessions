Socket {
    nsp:
     Namespace {
       name: '/',
       server:
        Server {
          nsps: [Object],
          parentNsps: Map {},
          _path: '/socket.io',
          _serveClient: true,
          parser: [Object],
          encoder: Encoder {},
          _adapter: [Function: Adapter],
          _origins: '*:*',
          sockets: [Circular],
          eio: [Server],
          httpServer: [Server],
          engine: [Server] },
       sockets: { RCjR2OODCOarjsjuAAAC: [Circular] },
       connected: { RCjR2OODCOarjsjuAAAC: [Circular] },
       fns: [],
       ids: 0,
       rooms: [],
       flags: {},
       adapter:
        Adapter {
          nsp: [Circular],
          rooms: [Object],
          sids: [Object],
          encoder: Encoder {} },
       _events: [Object: null prototype] { connection: [Function] },
       _eventsCount: 1 },
    server:
     Server {
       nsps: { '/': [Namespace] },
       parentNsps: Map {},
       _path: '/socket.io',
       _serveClient: true,
       parser:
        { protocol: 4,
          types: [Array],
          CONNECT: 0,
          DISCONNECT: 1,
          EVENT: 2,
          ACK: 3,
          ERROR: 4,
          BINARY_EVENT: 5,
          BINARY_ACK: 6,
          Encoder: [Function: Encoder],
          Decoder: [Function: Decoder] },
       encoder: Encoder {},
       _adapter: [Function: Adapter],
       _origins: '*:*',
       sockets:
        Namespace {
          name: '/',
          server: [Circular],
          sockets: [Object],
          connected: [Object],
          fns: [],
          ids: 0,
          rooms: [],
          flags: {},
          adapter: [Adapter],
          _events: [Object],
          _eventsCount: 1 },
       eio:
        Server {
          clients: [Object],
          clientsCount: 1,
          wsEngine: 'ws',
          pingTimeout: 5000,
          pingInterval: 25000,
          upgradeTimeout: 10000,
          maxHttpBufferSize: 100000000,
          transports: [Array],
          allowUpgrades: true,
          allowRequest: [Function: bound ],
          cookie: 'io',
          cookiePath: '/',
          cookieHttpOnly: true,
          perMessageDeflate: [Object],
          httpCompression: [Object],
          initialPacket: [Array],
          ws: [WebSocketServer],
          _events: [Object],
          _eventsCount: 1 },
       httpServer:
        Server {
          _events: [Object],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 6,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 120000,
          keepAliveTimeout: 5000,
          _pendingResponseData: 0,
          maxHeadersCount: null,
          headersTimeout: 40000,
          lastPlayderID: 1,
          _connectionKey: '6::::8081',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(asyncId)]: 5 },
       engine:
        Server {
          clients: [Object],
          clientsCount: 1,
          wsEngine: 'ws',
          pingTimeout: 5000,
          pingInterval: 25000,
          upgradeTimeout: 10000,
          maxHttpBufferSize: 100000000,
          transports: [Array],
          allowUpgrades: true,
          allowRequest: [Function: bound ],
          cookie: 'io',
          cookiePath: '/',
          cookieHttpOnly: true,
          perMessageDeflate: [Object],
          httpCompression: [Object],
          initialPacket: [Array],
          ws: [WebSocketServer],
          _events: [Object],
          _eventsCount: 1 } },
    adapter:
     Adapter {
       nsp:
        Namespace {
          name: '/',
          server: [Server],
          sockets: [Object],
          connected: [Object],
          fns: [],
          ids: 0,
          rooms: [],
          flags: {},
          adapter: [Circular],
          _events: [Object],
          _eventsCount: 1 },
       rooms: { RCjR2OODCOarjsjuAAAC: [Room] },
       sids: { RCjR2OODCOarjsjuAAAC: [Object] },
       encoder: Encoder {} },
    id: 'RCjR2OODCOarjsjuAAAC',
    client:
     Client {
       server:
        Server {
          nsps: [Object],
          parentNsps: Map {},
          _path: '/socket.io',
          _serveClient: true,
          parser: [Object],
          encoder: Encoder {},
          _adapter: [Function: Adapter],
          _origins: '*:*',
          sockets: [Namespace],
          eio: [Server],
          httpServer: [Server],
          engine: [Server] },
       conn:
        Socket {
          id: 'RCjR2OODCOarjsjuAAAC',
          server: [Server],
          upgrading: false,
          upgraded: true,
          readyState: 'open',
          writeBuffer: [],
          packetsFn: [],
          sentCallbackFn: [],
          cleanupFn: [Array],
          request: [IncomingMessage],
          remoteAddress: '::1',
          checkIntervalTimer: null,
          upgradeTimeoutTimer: null,
          pingTimeoutTimer:
           Timeout {
             _idleTimeout: 30000,
             _idlePrev: [TimersList],
             _idleNext: [TimersList],
             _idleStart: 3028,
             _onTimeout: [Function],
             _timerArgs: undefined,
             _repeat: null,
             _destroyed: false,
             [Symbol(refed)]: true,
             [Symbol(asyncId)]: 502,
             [Symbol(triggerId)]: 472 },
          transport: [WebSocket],
          _events: [Object],
          _eventsCount: 3 },
       encoder: Encoder {},
       decoder: Decoder { reconstructor: null, _callbacks: [Object] },
       id: 'RCjR2OODCOarjsjuAAAC',
       request:
        IncomingMessage {
          _readableState: [ReadableState],
          readable: false,
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          socket: [Socket],
          connection: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          headers: [Object],
          rawHeaders: [Array],
          trailers: {},
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '/socket.io/?EIO=3&transport=polling&t=Mj5a6zd',
          method: 'GET',
          statusCode: null,
          statusMessage: null,
          client: [Socket],
          _consuming: false,
          _dumped: true,
          _query: [Object],
          res: [ServerResponse],
          cleanup: [Function: cleanup] },
       onclose: [Function: bound ],
       ondata: [Function: bound ],
       onerror: [Function: bound ],
       ondecoded: [Function: bound ],
       sockets: { RCjR2OODCOarjsjuAAAC: [Circular] },
       nsps: { '/': [Circular] },
       connectBuffer: [] },
    conn:
     Socket {
       id: 'RCjR2OODCOarjsjuAAAC',
       server:
        Server {
          clients: [Object],
          clientsCount: 1,
          wsEngine: 'ws',
          pingTimeout: 5000,
          pingInterval: 25000,
          upgradeTimeout: 10000,
          maxHttpBufferSize: 100000000,
          transports: [Array],
          allowUpgrades: true,
          allowRequest: [Function: bound ],
          cookie: 'io',
          cookiePath: '/',
          cookieHttpOnly: true,
          perMessageDeflate: [Object],
          httpCompression: [Object],
          initialPacket: [Array],
          ws: [WebSocketServer],
          _events: [Object],
          _eventsCount: 1 },
       upgrading: false,
       upgraded: true,
       readyState: 'open',
       writeBuffer: [],
       packetsFn: [],
       sentCallbackFn: [],
       cleanupFn: [ [Function], [Function] ],
       request:
        IncomingMessage {
          _readableState: [ReadableState],
          readable: false,
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          socket: [Socket],
          connection: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          headers: [Object],
          rawHeaders: [Array],
          trailers: {},
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '/socket.io/?EIO=3&transport=polling&t=Mj5a6zd',
          method: 'GET',
          statusCode: null,
          statusMessage: null,
          client: [Socket],
          _consuming: false,
          _dumped: true,
          _query: [Object],
          res: [ServerResponse],
          cleanup: [Function: cleanup] },
       remoteAddress: '::1',
       checkIntervalTimer: null,
       upgradeTimeoutTimer: null,
       pingTimeoutTimer:
        Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 3028,
          _onTimeout: [Function],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(asyncId)]: 502,
          [Symbol(triggerId)]: 472 },
       transport:
        WebSocket {
          readyState: 'open',
          discarded: false,
          socket: [WebSocket],
          writable: false,
          perMessageDeflate: [Object],
          supportsBinary: true,
          _events: [Object],
          _eventsCount: 4 },
       _events:
        [Object: null prototype] {
          close: [Array],
          data: [Function: bound ],
          error: [Function: bound ] },
       _eventsCount: 3 },
    rooms: { RCjR2OODCOarjsjuAAAC: 'RCjR2OODCOarjsjuAAAC' },
    acks: {},
    connected: true,
    disconnected: false,
    handshake:
     { headers:
        { host: 'localhost:8081',
          connection: 'keep-alive',
          pragma: 'no-cache',
          'cache-control': 'no-cache',
          accept: '',
          'user-agent':
           'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36',
          referer: 'http://localhost:8081/',
          'accept-encoding': 'gzip, deflate, br',
          'accept-language': 'en-US,en;q=0.9,ja;q=0.8,la;q=0.7',
          cookie: 'io=GyOp5Tp8hvOZ8ZktAAAB' },
       time: 'Tue Jun 11 2019 01:03:42 GMT-0700 (Pacific Daylight Time)',
       address: '::1',
       xdomain: false,
       secure: false,
       issued: 1560240222058,
       url: '/socket.io/?EIO=3&transport=polling&t=Mj5a6zd',
       query: { EIO: '3', transport: 'polling', t: 'Mj5a6zd' } },
    fns: [],
    flags: {},
    _rooms: [],
    _events:
     [Object: null prototype] { newplayer: [Function], test: [Function] },
    _eventsCount: 2,
    player: { id: 0, x: 150, y: 150 } }